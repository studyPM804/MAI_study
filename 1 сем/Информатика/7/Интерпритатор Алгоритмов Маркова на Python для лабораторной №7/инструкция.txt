Для работы необходим Python версии 3+
В операционной системе Windows отсутствует по умолчанию
В линуксе он есть, достаточно ввести в терминале python3
Скачать можно здесь https://www.python.org/downloads/
В ос windows можно запускать через консоль, но проще всего через IDLE, который установится вместе с Python
Пуск -> IDLE -> File -> Open... (выберите файл markov.py) -> Run -> Run Module F5
После чего можно осуществлять ввод данных
Для демонстрации работы введите любое двоичное число и оно будет переведено в унарную систему счисления

Правила ввода подстановок
На одной строке может быть только одна подстановка вида
Слово->слововкотороепревратится
Если вместо -> использовать ->. то после выполнения подстановки алгоритм остановится
Подстановки записывать в файл rules.txt
При вводе преобразуемой строки избегайте лидирующих пробелов и символов >, -, //, /*, */
В примере перевод из двоичной системы в натуральную
Поддерживает протоколирование

По сравнению с версией 2011 года была введена поддержка пустых строк и комментариев
(Раньше программа вылетала, даже если у вас была одна пустая строка после команд)

Для объявления простого строчного комментария достаточно написать "//"
//Данный текст игнорируется интерпретатором
0->1//Обращение нулей в единицы
1->2  //Обращение единиц в двойки
2->3	//Обращение двоек в тройки (Если так продолжить, то можно стать отличником)
Все пустые символы (табуляции и пробелы) до "//” удаляются


Для объявления многострочного комментария достаточно написать "/*"
Многострочный комментарий всегда
/* (Здесь тоже можно что-то писать, но не красиво)
Весь последующий текст будет игнорироваться интерпретатором
Вы можете писать команды
a->b
Делать записи и заметки
Но они будут игнорироваться до тех пор, пока вы не введете 
(Здесь тоже можно что-то писать, но не красиво) */

Текст, введенный после */ уже НЕ будет игнорироваться

Комментарии очень удобны, т.к. вы можете не только пояснять, что делает конкретный участок кода,
Но также они позволяют на время выводить из строя какие-то команды или блоки команд, сохраняя при этом 
Некую структуру кода.